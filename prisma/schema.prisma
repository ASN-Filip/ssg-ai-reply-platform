generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @map("_id") @default(auto()) @db.ObjectId
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @map("_id") @default(auto()) @db.ObjectId
  compoundId         String  @unique
  userId             String  @db.ObjectId
  providerType       String
  providerId         String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id])
}

model Session {
  id           String   @id @map("_id") @default(auto()) @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         String   @id @map("_id") @default(auto()) @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Locale {
  id           String   @id @map("_id") @default(auto()) @db.ObjectId
  code         String
  displayName  String
  apiKey       String?
  // Bazaar Voice related fields
  bazaarVoiceApiKey String?
  bvResponseApiKey   String?
  bvClientId         String?
  bvClientSecret     String?
  bazaarVoiceClient  String?
  regionalNames String[] @default([])
  description  String?
  createdBy    String?  @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([code])
}

model Category {
  id              String     @id @map("_id") @default(auto()) @db.ObjectId
  categoryId      String?
  name            String
  categoryType    String?
  label           String
  description     String?
  aiTrainingData  String?
  productIds      String[]   @default([])
  parentId        String?    @db.ObjectId
  parent          Category?  @relation("CategoryChildren", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children        Category[] @relation("CategoryChildren")
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@unique([name])
  @@index([categoryType, parentId])
  @@index([parentId])
  @@index([categoryType, createdAt])
  @@index([parentId, createdAt])
}
